name: build
on: 
  push:
    branches:
      - master
    tags:        
      - v*

jobs:
  build:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
      
    - name: Build <linux>
      run: go build -v ./dist/pmzero-linux-x86_64
      if: matrix.os == 'ubuntu-latest'

    - name: Build <macOS>
      run: go build -v ./dist/pmzero-darwin-x86_64
      if: matrix.os == 'macOS-latest'
      
    - name: Build <windows>
      run: go build -v ./dist/pmzero-windows-x86_64.exe
      if: matrix.os == 'windows-latest'

    - name: Release - Upload binary <linux>
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'

    # Upload as a CI artifact
    # - name: Upload binary <linux>
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: pmzero-linux-x86_64
    #     path: ./dist/pmzero-linux-x86_64
    #   if: matrix.os == 'ubuntu-latest'

    # - name: Upload binary <macOS>
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: pmzero-darwin-x86_64
    #     path: ./dist/pmzero-darwin-x86_64
    #   if: matrix.os == 'macOS-latest'
      
    # - name: Upload binary <windows>
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: pmzero-windows-x86_64.exe
    #     path: ./dist/pmzero-windows-x86_64.exe
    #   if: matrix.os == 'windows-latest'